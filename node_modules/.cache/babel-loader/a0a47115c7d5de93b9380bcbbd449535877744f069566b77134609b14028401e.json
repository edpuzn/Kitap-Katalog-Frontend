{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FormTag from './forms/FormTag.vue';\nimport TextInput from './forms/TextInput.vue';\nimport notie from \"notie/dist/notie\";\nimport { store } from './store';\nimport router from \"@/router\";\nimport Security from \"@/components/security\";\nexport default {\n  beforeMount() {\n    Security.requireToken();\n    if (parseInt(String(this.$route.params.userId), 10) > 0) {\n      // editing an existing user\n      fetch(process.env.VUE_APP_API_URL + \"/admin/users/get/\" + this.$route.params.userId, Security.requestOptions(\"\")).then(response => response.json()).then(data => {\n        if (data.error) {\n          this.$emit('error', data.message);\n        } else {\n          this.user = data;\n          this.ready = true;\n          // we want password to be empty for existing users\n          this.user.password = \"\";\n        }\n      });\n    } else {\n      this.ready = true;\n    }\n  },\n  data() {\n    return {\n      user: {\n        id: 0,\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n        active: 0\n      },\n      store,\n      ready: false\n    };\n  },\n  components: {\n    'form-tag': FormTag,\n    'text-input': TextInput\n  },\n  methods: {\n    submitHandler() {\n      const payload = {\n        id: parseInt(String(this.$route.params.userId), 10),\n        first_name: this.user.first_name,\n        last_name: this.user.last_name,\n        email: this.user.email,\n        password: this.user.password,\n        active: this.user.active\n      };\n      fetch(`${process.env.VUE_APP_API_URL}/admin/users/save`, Security.requestOptions(payload)).then(response => response.json()).then(data => {\n        if (data.error) {\n          this.$emit('error', data.message);\n        } else {\n          this.$emit('success', \"Changes saved!\");\n          router.push(\"/admin/users\");\n        }\n      }).catch(error => {\n        this.$emit('error', error);\n      });\n    },\n    confirmDelete(id) {\n      notie.confirm({\n        text: \"Are you sure you want to delete this user?\",\n        submitText: \"Delete\",\n        submitCallback: function () {\n          let payload = {\n            id: id\n          };\n          fetch(process.env.VUE_APP_API_URL + \"/admin/users/delete\", Security.requestOptions(payload)).then(response => response.json()).then(data => {\n            if (data.error) {\n              this.$emit('error', data.message);\n            } else {\n              this.$emit('success', data.message);\n              router.push(\"/admin/users\");\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["FormTag","TextInput","notie","store","router","Security","beforeMount","requireToken","parseInt","String","$route","params","userId","fetch","process","env","VUE_APP_API_URL","requestOptions","then","response","json","data","error","$emit","message","user","ready","password","id","first_name","last_name","email","active","components","methods","submitHandler","payload","push","catch","confirmDelete","confirm","text","submitText","submitCallback"],"sources":["/Users/ed1p_/MovieProject/frontend/src/components/UserEdit.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1 class=\"mt-3\">User</h1>\n        <hr>\n        <form-tag v-if=\"this.ready\" @userEditEvent=\"submitHandler\" name=\"userform\" event=\"userEditEvent\">\n\n          <text-input\n              v-model=\"user.first_name\"\n              type=\"text\"\n              required=\"true\"\n              label=\"First Name\"\n              :value=\"user.first_name\"\n              name=\"first-name\"></text-input>\n\n          <text-input\n              v-model=\"user.last_name\"\n              type=\"text\"\n              required=\"true\"\n              label=\"Last Name\"\n              :value=\"user.last_name\"\n              name=\"last-name\"></text-input>\n\n          <text-input\n              v-model=\"user.email\"\n              type=\"email\"\n              required=\"true\"\n              label=\"Email\"\n              :value=\"user.email\"\n              name=\"email\"></text-input>\n\n          <text-input\n              v-if=\"this.user.id === 0\"\n              v-model=\"user.password\"\n              type=\"password\"\n              required=\"true\"\n              label=\"Password\"\n              :value=\"user.password\"\n              name=\"password\"></text-input>\n\n          <text-input\n              v-else\n              v-model=\"user.password\"\n              type=\"password\"\n              label=\"Password\"\n              help=\"Leave empty to keep existing password\"\n              :value=\"user.password\"\n              name=\"password\"></text-input>\n\n          <div class=\"form-check\">\n            <input v-model=\"user.active\" class=\"form-check-input\" type=\"radio\" id=\"user-active\" :value=\"1\">\n            <label class=\"form-check-label\" for=\"user-active\">\n              Active\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input v-model=\"user.active\" class=\"form-check-input\" type=\"radio\" id=\"user-active-2\" :value=\"0\">\n            <label class=\"form-check-label\" for=\"user-active-2\">\n              Inactive\n            </label>\n          </div>\n\n          <hr>\n          <div class=\"float-start\">\n            <input type=\"submit\" class=\"btn btn-primary me-2\" value=\"Save\">\n            <router-link to=\"/admin/users\" class=\"btn btn-outline-secondary\">Cancel</router-link>\n          </div>\n          <div class=\"float-end\">\n            <a v-if=\"(this.$route.params.userId > 0) && (parseInt(String(this.$route.params.userId), 10) !== store.user.id)\"\n               class=\"btn btn-danger\" href=\"javascript:void(0);\" @click=\"confirmDelete(this.user.id)\">Delete</a>\n          </div>\n          <div class=\"clearfix\"></div>\n\n        </form-tag>\n\n        <p v-else>Loading...</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FormTag from './forms/FormTag.vue'\nimport TextInput from './forms/TextInput.vue'\nimport notie from \"notie/dist/notie\";\nimport {store} from './store'\nimport router from \"@/router\";\nimport Security from \"@/components/security\";\n\nexport default {\n  beforeMount() {\n    Security.requireToken();\n\n    if (parseInt(String(this.$route.params.userId), 10) > 0) {\n      // editing an existing user\n      fetch(process.env.VUE_APP_API_URL + \"/admin/users/get/\" + this.$route.params.userId, Security.requestOptions(\"\"))\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.error) {\n              this.$emit('error', data.message);\n            } else {\n              this.user = data;\n              this.ready = true;\n              // we want password to be empty for existing users\n              this.user.password = \"\";\n            }\n          })\n    } else {\n      this.ready = true;\n    }\n  },\n  data() {\n    return {\n      user: {\n        id: 0,\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n        active: 0,\n      },\n      store,\n      ready: false,\n    }\n  },\n  components: {\n    'form-tag': FormTag,\n    'text-input': TextInput,\n  },\n  methods: {\n    submitHandler() {\n      const payload = {\n        id: parseInt(String(this.$route.params.userId), 10),\n        first_name: this.user.first_name,\n        last_name: this.user.last_name,\n        email: this.user.email,\n        password: this.user.password,\n        active: this.user.active,\n      }\n\n      fetch(`${process.env.VUE_APP_API_URL}/admin/users/save`, Security.requestOptions(payload))\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.error) {\n              this.$emit('error', data.message);\n            } else {\n              this.$emit('success', \"Changes saved!\");\n              router.push(\"/admin/users\");\n            }\n          })\n          .catch((error) => {\n            this.$emit('error', error);\n          })\n    },\n    confirmDelete(id) {\n      notie.confirm({\n        text: \"Are you sure you want to delete this user?\",\n        submitText: \"Delete\",\n        submitCallback: function() {\n          let payload = {\n            id: id,\n          }\n\n          fetch(process.env.VUE_APP_API_URL + \"/admin/users/delete\", Security.requestOptions(payload))\n              .then((response) => response.json())\n              .then((data) => {\n                if (data.error) {\n                  this.$emit('error', data.message);\n                } else {\n                  this.$emit('success', data.message);\n                  router.push(\"/admin/users\")\n                }\n              })\n        }\n      })\n    }\n  }\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}