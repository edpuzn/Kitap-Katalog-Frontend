{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Body from './../components/Body.vue';\nimport Login from './../components/Login.vue';\nimport Books from './../components/Books.vue';\nimport Book from './../components/Book.vue';\nimport BooksAdmin from './../components/BooksAdmin.vue';\nimport BookEdit from './../components/BookEdit.vue';\nimport Users from './../components/Users.vue';\nimport User from './../components/UserEdit.vue';\nimport Security from \"@/components/security\";\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Body\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/books',\n  name: 'Books',\n  component: Books\n}, {\n  path: '/books/:bookName',\n  name: 'Book',\n  component: Book\n}, {\n  path: '/admin/books',\n  name: 'BooksAdmin',\n  component: BooksAdmin\n}, {\n  path: '/admin/books/:bookId',\n  name: 'BookEdit',\n  component: BookEdit\n}, {\n  path: '/admin/users',\n  name: 'Users',\n  component: Users\n}, {\n  path: '/admin/users/:userId',\n  name: 'User',\n  component: User\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// this function will run every time a user navigates to any part of the site,\n// and call checkToken(). If the user has a token in store.token, then we validate\n// that token.\nrouter.beforeEach(() => {\n  Security.checkToken();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Body","Login","Books","Book","BooksAdmin","BookEdit","Users","User","Security","routes","path","name","component","router","history","beforeEach","checkToken"],"sources":["/Users/ed1p_/MovieProject/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Body from './../components/Body.vue'\nimport Login from './../components/Login.vue'\nimport Books from './../components/Books.vue'\nimport Book from './../components/Book.vue'\nimport BooksAdmin from './../components/BooksAdmin.vue'\nimport BookEdit from './../components/BookEdit.vue'\nimport Users from './../components/Users.vue'\nimport User from './../components/UserEdit.vue'\nimport Security from \"@/components/security\";\n\nconst routes = [\n    {\n        path: '/',\n        name: 'Home',\n        component: Body,\n    },\n    {\n        path: '/login',\n        name: 'Login',\n        component: Login,\n    },\n    {\n        path: '/books',\n        name: 'Books',\n        component: Books,\n    },\n    {\n        path: '/books/:bookName',\n        name: 'Book',\n        component: Book,\n    },\n    {\n        path: '/admin/books',\n        name: 'BooksAdmin',\n        component: BooksAdmin,\n    },\n    {\n        path: '/admin/books/:bookId',\n        name: 'BookEdit',\n        component: BookEdit,\n    },\n    {\n        path: '/admin/users',\n        name: 'Users',\n        component: Users,\n    },\n    {\n        path: '/admin/users/:userId',\n        name: 'User',\n        component: User,\n    },\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes\n})\n\n// this function will run every time a user navigates to any part of the site,\n// and call checkToken(). If the user has a token in store.token, then we validate\n// that token.\nrouter.beforeEach(() => {\n    Security.checkToken();\n})\n\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,IAAI,MAAM,8BAA8B;AAC/C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEZ;AACf,CAAC,EACD;EACIU,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEX;AACf,CAAC,EACD;EACIS,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEV;AACf,CAAC,EACD;EACIQ,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAET;AACf,CAAC,EACD;EACIO,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAER;AACf,CAAC,EACD;EACIM,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEP;AACf,CAAC,EACD;EACIK,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACf,CAAC,EACD;EACII,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEL;AACf,CAAC,CACJ;AAED,MAAMM,MAAM,GAAGf,YAAY,CAAC;EACxBgB,OAAO,EAAEf,gBAAgB,CAAC,CAAC;EAC3BU;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACAI,MAAM,CAACE,UAAU,CAAC,MAAM;EACpBP,QAAQ,CAACQ,UAAU,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,eAAeH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}