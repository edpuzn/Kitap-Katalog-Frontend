{"ast":null,"code":"import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"method\", \"action\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    autocomplete: \"off\",\n    method: $props.method,\n    action: $props.action,\n    class: \"needs-validation\",\n    novalidate: \"\"\n  }, [_renderSlot(_ctx.$slots, \"default\")], 8 /* PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","autocomplete","method","$props","action","class","novalidate","_renderSlot","_ctx","$slots","_hoisted_1"],"sources":["/Users/ed1p_/MovieProject/frontend/src/components/forms/FormTag.vue"],"sourcesContent":["<template>\n    <form autocomplete=\"off\" :method=\"method\" :action=\"action\" class=\"needs-validation\" novalidate>\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    name: 'FormTag',\n    props: [\"method\", \"action\"],\n    mounted() {\n        (function () {\n            'use strict'\n\n            // Fetch all the forms we want to apply custom Bootstrap validation styles to\n            var forms = document.querySelectorAll('.needs-validation')\n\n            // Loop over them and prevent submission\n            Array.prototype.slice.call(forms)\n                .forEach(function (form) {\n                form.addEventListener('submit', function (event) {\n                    if (!form.checkValidity()) {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    }\n\n                    form.classList.add('was-validated')\n                }, false)\n                })\n            })()\n    }\n}\n</script>"],"mappings":";mBAAA;;uBACIA,mBAAA,CAEO;IAFDC,YAAY,EAAC,KAAK;IAAEC,MAAM,EAAEC,MAAA,CAAAD,MAAM;IAAGE,MAAM,EAAED,MAAA,CAAAC,MAAM;IAAEC,KAAK,EAAC,kBAAkB;IAACC,UAAU,EAAV;MAChFC,WAAA,CAAaC,IAAA,CAAAC,MAAA,a,iBAFrBC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}