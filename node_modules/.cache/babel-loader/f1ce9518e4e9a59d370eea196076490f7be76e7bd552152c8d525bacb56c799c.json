{"ast":null,"code":"import Security from './security.js';\nimport FormTag from './forms/FormTag.vue';\nimport TextInput from './forms/TextInput.vue';\nimport notie from 'notie';\nimport { store } from './store';\nexport default {\n  beforeMount() {\n    Security.requireToken();\n    if (parseInt(String(this.$route.params.userId), 10) > 0) {\n      // editing an existing user\n      fetch(process.env.VUE_APP_API_URL + \"/admin/users/get/\" + this.$route.params.userId, Security.requestOptions(\"\")).then(response => response.json()).then(data => {\n        if (data.error) {\n          notie.alert({\n            type: 'error',\n            text: data.message\n          });\n        } else {\n          this.user = data;\n          // we want password to be empty for existing users\n          this.user.password = \"\";\n        }\n      });\n    }\n  },\n  data() {\n    return {\n      user: {\n        id: 0,\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      store\n    };\n  },\n  components: {\n    'form-tag': FormTag,\n    'text-input': TextInput\n  },\n  methods: {\n    submitHandler() {\n      const payload = {\n        id: parseInt(String(this.$route.params.userId), 10),\n        first_name: this.user.first_name,\n        last_name: this.user.last_name,\n        email: this.user.email,\n        password: this.user.password\n      };\n      fetch(`${process.env.VUE_APP_API_URL}/admin/users/save`, Security.requestOptions(payload)).then(response => response.json()).then(data => {\n        if (data.error) {\n          notie.alert({\n            type: 'error',\n            text: data.message\n          });\n        } else {\n          notie.alert({\n            type: 'success',\n            text: 'Changes saved!'\n          });\n        }\n      }).catch(error => {\n        notie.alert({\n          type: 'error',\n          text: error\n        });\n      });\n    },\n    confirmDelete(id) {\n      notie.confirm({\n        text: \"Are you sure you want to delete this user?\",\n        submitText: \"Delete\",\n        submitCallback: function () {\n          console.log(\"will delete\", id);\n          let payload = {\n            id: id\n          };\n          fetch(process.env.VUE_APP_API_URL + \"/admin/users/delete\", Security.requestOptions(payload)).then(response => response.json()).then(data => {\n            if (data.error) {\n              notie.alert({\n                type: 'error',\n                text: data.message\n              });\n            } else {\n              notie.alert({\n                type: 'success',\n                text: \"User deleted\"\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Security","FormTag","TextInput","notie","store","beforeMount","requireToken","parseInt","String","$route","params","userId","fetch","process","env","VUE_APP_API_URL","requestOptions","then","response","json","data","error","alert","type","text","message","user","password","id","first_name","last_name","email","components","methods","submitHandler","payload","catch","confirmDelete","confirm","submitText","submitCallback","console","log"],"sources":["/Users/ed1p_/MovieProject/frontend/src/components/UserEdit.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <h1 class=\"mt-3\">User</h1>\n                <hr>\n                <form-tag @userEditEvent=\"submitHandler\" name=\"userform\" event=\"userEditEvent\">\n\n                    <text-input\n                        v-model=\"user.first_name\"\n                        type=\"text\"\n                        required=\"true\"\n                        label=\"First Name\"\n                        :value=\"user.first_name\"\n                        name=\"first-name\"></text-input>\n\n                    <text-input\n                        v-model=\"user.last_name\"\n                        type=\"text\"\n                        required=\"true\"\n                        label=\"Last Name\"\n                        :value=\"user.last_name\"\n                        name=\"last-name\"></text-input>\n\n                    <text-input\n                        v-model=\"user.email\"\n                        type=\"email\"\n                        required=\"true\"\n                        label=\"Email\"\n                        :value=\"user.email\"\n                        name=\"email\"></text-input>\n\n                    <text-input\n                        v-if=\"this.user.id === 0\"\n                        v-model=\"user.password\"\n                        type=\"password\"\n                        required=\"true\"\n                        label=\"Password\"\n                        :value=\"user.password\"\n                        name=\"password\"></text-input>\n\n                    <text-input\n                        v-else\n                        v-model=\"user.password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        help=\"Leave empty to keep existing password\"\n                        :value=\"user.password\"\n                        name=\"password\"></text-input>\n\n                    <hr>\n                    <div class=\"float-start\">\n                        <input type=\"submit\" class=\"btn btn-primary me-2\" value=\"Save\">\n                        <router-link to=\"/admin/users\" class=\"btn btn-outline-secondary\">Cancel</router-link>\n                    </div>\n                    <div class=\"float-end\">\n                        <a v-if=\"(this.$route.params.userId > 0) && (parseInt(String(this.$route.params.userId), 10) !== store.user.id)\"\n                            class=\"btn btn-danger\" href=\"javascript:void(0);\" @click=\"confirmDelete(this.user.id)\">Delete</a>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                </form-tag>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Security from './security.js'\nimport FormTag from './forms/FormTag.vue'\nimport TextInput from './forms/TextInput.vue'\nimport notie from 'notie'\nimport {store} from './store'\n\nexport default {\n    beforeMount() {\n        Security.requireToken();\n\n        if (parseInt(String(this.$route.params.userId), 10) > 0) {\n            // editing an existing user\n            fetch(process.env.VUE_APP_API_URL + \"/admin/users/get/\" + this.$route.params.userId, Security.requestOptions(\"\"))\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.error) {\n                    notie.alert({\n                        type: 'error',\n                        text: data.message,\n                    })\n                } else {\n                    this.user = data;\n                    // we want password to be empty for existing users\n                    this.user.password = \"\";\n                }\n            })\n        }\n    },\n    data() {\n        return {\n            user: {\n                id: 0,\n                first_name: \"\",\n                last_name: \"\",\n                email: \"\",\n                password: \"\",\n            },\n            store,\n        }\n    },\n    components: {\n        'form-tag': FormTag,\n        'text-input': TextInput,\n    },\n    methods: {\n        submitHandler() {\n            const payload = {\n                id: parseInt(String(this.$route.params.userId), 10),\n                first_name: this.user.first_name,\n                last_name: this.user.last_name,\n                email: this.user.email,\n                password: this.user.password,\n            }\n\n            fetch(`${process.env.VUE_APP_API_URL}/admin/users/save`, Security.requestOptions(payload))\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.error) {\n                    notie.alert({\n                        type: 'error',\n                        text: data.message,\n                    })\n                } else {\n                    notie.alert({\n                        type: 'success',\n                        text: 'Changes saved!',\n                    })\n                }\n            })\n            .catch((error) => {\n                notie.alert({\n                    type: 'error',\n                    text: error,\n                })\n            })\n        }, \n        confirmDelete(id) {\n            notie.confirm({\n                text: \"Are you sure you want to delete this user?\",\n                submitText: \"Delete\",\n                submitCallback: function() {\n                    console.log(\"will delete\", id)\n\n                    let payload = {\n                        id: id,\n                    }\n\n                    fetch(process.env.VUE_APP_API_URL + \"/admin/users/delete\", Security.requestOptions(payload))\n                    .then((response) => response.json())\n                    .then((data) => {\n                        if (data.error) {\n                            notie.alert({\n                                type: 'error',\n                                text: data.message,\n                            })\n                        } else {\n                            notie.alert({\n                                type: 'success',\n                                text: \"User deleted\",\n                            })\n                        }\n                    })\n                }\n            })\n        }\n    }\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}